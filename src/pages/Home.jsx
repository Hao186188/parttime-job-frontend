import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import Footer from '../components/Footer';
import './Home.css';
import apiService from '../services/api';

function Home() {
  const navigate = useNavigate();
  const [featuredJobs, setFeaturedJobs] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [location, setLocation] = useState('');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadFeaturedJobs();
  }, []);

  const loadFeaturedJobs = async () => {
    try {
      const response = await apiService.getFeaturedJobs();
      setFeaturedJobs(response.data.jobs || []);
    } catch (error) {
      console.error('Error loading featured jobs:', error);
      setFeaturedJobs([]);
    } finally {
      setLoading(false);
    }
  };

  const handleSearch = (e) => {
    e.preventDefault();
    navigate(`/jobs?search=${searchTerm}&location=${location}`);
  };

  const categories = [
    { icon: 'üçΩÔ∏è', title: 'Ph·ª•c v·ª•', description: 'Nh√† h√†ng, qu√°n cafe' },
    { icon: 'üõí', title: 'B√°n h√†ng', description: 'C·ª≠a h√†ng, si√™u th·ªã' },
    { icon: 'üìö', title: 'Gia s∆∞', description: 'D·∫°y k√®m c√°c m√¥n h·ªçc' },
    { icon: 'üíª', title: 'C√¥ng ngh·ªá', description: 'L·∫≠p tr√¨nh, thi·∫øt k·∫ø' },
    { icon: 'üì¶', title: 'Giao h√†ng', description: 'Shipper, giao ƒë·ªì ƒÉn' },
    { icon: 'üéØ', title: 'Kh√°c', description: 'C√°c c√¥ng vi·ªác ƒëa d·∫°ng' }
  ];

  const steps = [
    { number: 1, title: 'T·∫°o t√†i kho·∫£n', description: 'ƒêƒÉng k√Ω t√†i kho·∫£n mi·ªÖn ph√≠ trong v√†i ph√∫t' },
    { number: 2, title: 'T√¨m vi·ªác ph√π h·ª£p', description: 'T√¨m ki·∫øm v√† l·ªçc c√°c c√¥ng vi·ªác b√°n th·ªùi gian' },
    { number: 3, title: '·ª®ng tuy·ªÉn', description: 'G·ª≠i h·ªì s∆° ·ª©ng tuy·ªÉn ƒë·∫øn nh√† tuy·ªÉn d·ª•ng' },
    { number: 4, title: 'B·∫Øt ƒë·∫ßu l√†m vi·ªác', description: 'Nh·∫≠n c√¥ng vi·ªác v√† b·∫Øt ƒë·∫ßu l√†m vi·ªác' }
  ];

  return (
    <div className="home-page">
      {/* Header */}
      <header>
        <div className="container">
          <div className="logo">
            <h1><Link to="/">PartTimeJob</Link></h1>
            <p>Vi·ªác l√†m b√°n th·ªùi gian cho h·ªçc sinh, sinh vi√™n</p>
          </div>
          <nav>
            <ul>
              <li><Link to="/" className="active">Trang ch·ªß</Link></li>
              <li><Link to="/jobs">T√¨m vi·ªác</Link></li>
              <li><Link to="/employer/dashboard">Nh√† tuy·ªÉn d·ª•ng</Link></li>
              <li><Link to="/login" className="btn-login">ƒêƒÉng nh·∫≠p</Link></li>
              <li><Link to="/register" className="btn-register">ƒêƒÉng k√Ω</Link></li>
            </ul>
          </nav>
        </div>
      </header>

      {/* Hero Section */}
      <section className="hero">
        <div className="container">
          <div className="hero-content">
            <h1>T√¨m Vi·ªác L√†m B√°n Th·ªùi Gian Ph√π H·ª£p</h1>
            <p>K·∫øt n·ªëi h·ªçc sinh, sinh vi√™n v·ªõi c√°c c√¥ng vi·ªác b√°n th·ªùi gian linh ho·∫°t, ph√π h·ª£p v·ªõi l·ªãch h·ªçc</p>
            <form className="search-box" onSubmit={handleSearch}>
              <input 
                type="text" 
                placeholder="T√¨m ki·∫øm vi·ªác l√†m, v·ªã tr√≠..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
              <select 
                value={location}
                onChange={(e) => setLocation(e.target.value)}
              >
                <option value="">T·∫•t c·∫£ ƒë·ªãa ƒëi·ªÉm</option>
                <option value="hanoi">H√† N·ªôi</option>
                <option value="hcm">TP. H·ªì Ch√≠ Minh</option>
                <option value="danang">ƒê√† N·∫µng</option>
              </select>
              <button type="submit" className="btn-search">
                T√¨m ki·∫øm
              </button>
            </form>
          </div>
        </div>
      </section>

      {/* Categories */}
      <section className="categories">
        <div className="container">
          <h2>Danh m·ª•c vi·ªác l√†m</h2>
          <div className="category-grid">
            {categories.map((category, index) => (
              <div key={index} className="category-item">
                <div className="category-icon">{category.icon}</div>
                <h3>{category.title}</h3>
                <p>{category.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Featured Jobs */}
      <section className="featured-jobs">
        <div className="container">
          <h2>Vi·ªác l√†m n·ªïi b·∫≠t</h2>
          {loading ? (
            <div className="loading">
              <div className="loading-spinner"></div>
              <p>ƒêang t·∫£i vi·ªác l√†m...</p>
            </div>
          ) : (
            <>
              <div className="jobs-grid">
                {featuredJobs.slice(0, 6).map(job => (
                  <div key={job._id} className="job-item">
                    <div className="job-header">
                      <div className="job-title">{job.title}</div>
                      <div className="job-company">{job.company?.name}</div>
                    </div>
                    <div className="job-body">
                      <div className="job-info">
                        <div className="job-location">üìç {job.location}</div>
                        <div className="job-salary">üí∞ {job.salary}</div>
                      </div>
                      <p className="job-description">
                        {job.description.length > 100 
                          ? `${job.description.substring(0, 100)}...` 
                          : job.description
                        }
                      </p>
                    </div>
                    <div className="job-footer">
                      <span className="job-type">{job.jobType}</span>
                      <button 
                        className="btn-apply"
                        onClick={() => navigate(`/jobs#${job._id}`)}
                      >
                        ·ª®ng tuy·ªÉn
                      </button>
                    </div>
                  </div>
                ))}
              </div>
              {featuredJobs.length === 0 && (
                <div className="empty-state">
                  <div className="empty-state-icon">üíº</div>
                  <h3>Ch∆∞a c√≥ vi·ªác l√†m n·ªïi b·∫≠t</h3>
                  <p>H√£y quay l·∫°i sau ƒë·ªÉ xem c√°c c√¥ng vi·ªác m·ªõi nh·∫•t</p>
                </div>
              )}
              <div className="view-all">
                <Link to="/jobs" className="btn-view-all">
                  Xem t·∫•t c·∫£ vi·ªác l√†m
                </Link>
              </div>
            </>
          )}
        </div>
      </section>

      {/* How It Works */}
      <section className="how-it-works">
        <div className="container">
          <h2>C√°ch th·ª©c ho·∫°t ƒë·ªông</h2>
          <div className="steps">
            {steps.map((step, index) => (
              <div key={index} className="step">
                <div className="step-number">{step.number}</div>
                <h3>{step.title}</h3>
                <p>{step.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer>
        <div className="container">
          <div className="footer-content">
            <div className="footer-section">
              <h3>QTM3-K14</h3>
              <p>K·∫øt n·ªëi h·ªçc sinh, sinh vi√™n v·ªõi c√°c c√¥ng vi·ªác b√°n th·ªùi gian ph√π h·ª£p.</p>
            </div>
            <div className="footer-section">
              <h4>Li√™n k·∫øt nhanh</h4>
              <ul>
                <li><Link to="/">Trang ch·ªß</Link></li>
                <li><Link to="/jobs">T√¨m vi·ªác</Link></li>
                <li><Link to="/employer/dashboard">Nh√† tuy·ªÉn d·ª•ng</Link></li>
              </ul>
            </div>
            <div className="footer-section">
              <h4>H·ªó tr·ª£</h4>
              <ul>
                <li><Link to="/faq">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Link></li>
                <li><Link to="/contact">Li√™n h·ªá</Link></li>
                <li><Link to="/terms">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</Link></li>
              </ul>
            </div>
            <div className="footer-section">
              <h4>Theo d√µi ch√∫ng t√¥i</h4>
              <div className="social-links">
                <a href="https://facebook.com/share/17PfiN1Xrk/" target="_blank" rel="noopener noreferrer">
                  Facebook
                </a>
                <a href="https://zalo.me/0788984741" target="_blank" rel="noopener noreferrer">
                  Zalo
                </a>
                <a href="mailto:contact@parttimejob.com">Email</a>
              </div>
            </div>
          </div>
          <div className="footer-bottom">
            <p>&copy; 2025 QTM3-K14. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default Home;